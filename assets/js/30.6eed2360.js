(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{521:function(r,t,v){"use strict";v.r(t);var _=v(2),a=Object(_.a)({},(function(){var r=this,t=r.$createElement,v=r._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[v("h3",{attrs:{id:"迭代器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[r._v("#")]),r._v(" 迭代器")]),r._v(" "),v("p",[r._v("在 JavaScript 中，"),v("strong",[r._v("迭代器")]),r._v("是一个对象，它定义一个序列，并在终止时可能返回一个返回值。")]),r._v(" "),v("p",[r._v("一旦创建，迭代器对象可以通过重复调用next() 显式地迭代。迭代一个迭代器被称为消耗了这个迭代器，因为它通常只能执行一次。在产生终止值后，应该继续返回{done: true}")]),r._v(" "),v("h3",{attrs:{id:"生成器函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成器函数"}},[r._v("#")]),r._v(" 生成器函数")]),r._v(" "),v("p",[r._v("生成器函数提供了一个强大的选择：它允许你定义一个包含自有迭代算法的函数， 同时它可以自动维护自己的状态。 生成器函数使用 "),v("code",[r._v("function*")]),r._v("语法编写。")]),r._v(" "),v("h3",{attrs:{id:"可迭代对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可迭代对象"}},[r._v("#")]),r._v(" 可迭代对象")]),r._v(" "),v("p",[r._v("若一个对象拥有迭代行为，比如在 "),v("code",[r._v("for...of")]),r._v(" 中会循环哪些值，那么那个对象便是一个可迭代对象。")]),r._v(" "),v("p",[r._v("为了实现"),v("strong",[r._v("可迭代")]),r._v("，一个对象必须实现 "),v("strong",[r._v("@@iterator")]),r._v(" 方法，这意味着这个对象（或其原型链中的任意一个对象）必须具有一个带 "),v("code",[r._v("Symbol.iterator")]),r._v(" 键（key）的属性。")]),r._v(" "),v("h3",{attrs:{id:"内置可迭代对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置可迭代对象"}},[r._v("#")]),r._v(" 内置可迭代对象")]),r._v(" "),v("p",[r._v("String、Array、TypedArray、Map、Set 都是可迭代对象，因为他们的原型都拥有一个Symbol.iterator 方法。")]),r._v(" "),v("h3",{attrs:{id:"for-of-语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#for-of-语句"}},[r._v("#")]),r._v(" for...of 语句")]),r._v(" "),v("p",[r._v("for...of 语句在可迭代对象上创建一个迭代循环，调用自定义迭代钩子，并为每个不同属性的值执行语句")]),r._v(" "),v("h3",{attrs:{id:"关闭迭代器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关闭迭代器"}},[r._v("#")]),r._v(" 关闭迭代器")]),r._v(" "),v("p",[r._v("对于"),v("code",[r._v("for...of")]),r._v("的循环，可以由"),v("code",[r._v("break")]),r._v(", "),v("code",[r._v("throw continue")]),r._v("  或"),v("code",[r._v("return")]),r._v("终止。在这些情况下，迭代器关闭。")]),r._v(" "),v("h3",{attrs:{id:"for-of与for-in的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#for-of与for-in的区别"}},[r._v("#")]),r._v(" "),v("code",[r._v("for...of")]),r._v("与"),v("code",[r._v("for...in")]),r._v("的区别")]),r._v(" "),v("ul",[v("li",[v("p",[v("code",[r._v("for...in")]),r._v("语句以任意顺序迭代对象的可枚举属性。")])]),r._v(" "),v("li",[v("p",[v("code",[r._v("for...of")]),r._v(" 语句遍历可迭代对象定义要迭代的数据。")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);